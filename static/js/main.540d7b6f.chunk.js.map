{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","store/contactSlice.js","store/index.js","components/Container/Container.js","components/ContactForm/ContactForm.js","store/contactsSelectors.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","BASE_URL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","dispatch","fetch","response","ok","Error","json","data","message","removeContact","id","method","deleteContact","addContact","contactNew","headers","body","JSON","stringify","addContactNew","filterContact","value","metod","changeFilter","setError","state","action","status","error","payload","setPending","contactSlice","createSlice","name","initialState","contacts","filter","reducers","extraReducers","pending","fulfilled","rejected","actions","configureStore","reducer","contactReducer","Container","title","children","className","s","container","ContactForm","useState","setName","phone","setPhone","useSelector","useDispatch","handleChange","e","target","reset","onSubmit","preventDefault","newContact","some","contact","includes","alert","contactForm","label","input","type","autoComplete","onChange","placeholder","pattern","required","submitButton","getContacts","getFilter","Filter","currentTarget","ContactList","useEffect","normalizedFilter","toLowerCase","visibleContacts","list","length","map","item","buttonDelete","onClick","color","size","App","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.540d7b6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__zihDX\",\"item\":\"ContactList_item__wpQhi\",\"buttonDelete\":\"ContactList_buttonDelete__3DCs2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1YKtr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1m1fI\"};","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst BASE_URL = 'https://618eb0d750e24d0017ce13d2.mockapi.io/api/contacts';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n\n  async function (_, { rejectWithValue, dispatch }) {\n    try {\n      const response = await fetch(BASE_URL);\n      if (!response.ok) {\n        throw new Error('error server!');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const removeContact = createAsyncThunk(\n  'contacts/remove',\n\n  async function (id, { rejectWithValue, dispatch }) {\n    try {\n      const response = await fetch(`${BASE_URL}/${id}`, {\n        method: 'DELETE',\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Can't delete contact!Error Server!\");\n      }\n\n      dispatch(deleteContact(id));\n      // const data = await response.json();\n      return id;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addcontact',\n\n  async function (contactNew, { rejectWithValue, dispatch }) {\n    try {\n      const response = await fetch(BASE_URL, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(contactNew),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Can't add contact! Error Server!\");\n      }\n\n      const data = await response.json();\n      dispatch(addContactNew(data));\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const filterContact = createAsyncThunk(\n  'contacts/filter',\n  async function (value, { rejectWithValue, dispatch }) {\n    try {\n      const response = await fetch(\n        `https://618eb0d750e24d0017ce13d2.mockapi.io/api/contacts?filter=${value}`,\n        {\n          metod: 'GET',\n        },\n      );\n      if (!response.ok) {\n        throw new Error(\"Can't filtered contact!Error Server!\");\n      }\n      dispatch(changeFilter(value));\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nconst setError = (state, action) => {\n  state.status = 'rejected';\n  state.error = action.payload;\n};\nconst setPending = state => {\n  // state.status = 'loading';\n  state.error = null;\n};\n\nconst contactSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    contacts: [],\n    filter: '',\n    status: null,\n    error: null,\n  },\n\n  reducers: {\n    addContactNew(state, action) {\n      state.contacts = [action.payload, ...state.contacts];\n    },\n\n    deleteContact(state, action) {\n      state.contacts = state.contacts.filter(({ id }) => id !== action.payload);\n    },\n\n    changeFilter(state, action) {\n      state.filter = action.payload;\n    },\n  },\n\n  extraReducers: {\n    [fetchContacts.pending]: setPending,\n    [fetchContacts.fulfilled]: (state, action) => {\n      state.contacts = action.payload;\n      state.status = 'resolved';\n      state.error = null;\n    },\n    [fetchContacts.rejected]: setError,\n\n    [addContact.pending]: setPending,\n    [addContact.fulfilled]: function (state, action) {\n      state.status = 'resolved';\n      state.error = null;\n    },\n    [addContact.rejected]: setError,\n\n    [removeContact.pending]: setPending,\n    [removeContact.fulfilled]: state => {\n      state.status = 'resolved';\n      state.error = null;\n    },\n    [removeContact.rejected]: setError,\n  },\n});\n\nconst { addContactNew, deleteContact, changeFilter } = contactSlice.actions;\nexport default contactSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport contactReducer from './contactSlice';\n\nexport default configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n});\n","import PropTypes from 'prop-types';\nimport s from '../Container/Container.module.css';\n\nfunction Container({ title, children }) {\n  return (\n    <div className={s.container}>\n      <h2> {title}</h2>\n\n      {children}\n    </div>\n  );\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../store/contactSlice';\n\nimport s from '../ContactForm/ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(state => state.contacts.contacts);\n\n  const dispatch = useDispatch();\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      name: name,\n      phone: phone,\n    };\n\n    if (contacts) {\n      if (contacts.some(contact => contact.name.includes(name))) {\n        alert(`${name} is already in contacts!`);\n        reset();\n        return;\n      }\n    }\n\n    dispatch(addContact(newContact));\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.contactForm}>\n      <label className={s.label}>\n        Name:\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"off\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Tom Smit\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={s.label}>\n        Phone:\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"phone\"\n          autoComplete=\"off\"\n          value={phone}\n          onChange={handleChange}\n          placeholder=\"050-50-50\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <input className={s.submitButton} type=\"submit\" value=\"Add contact\" />\n    </form>\n  );\n}\n\nexport default ContactForm;\n","export const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.contacts.filter;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from 'store/contactsSelectors';\nimport { filterContact } from 'store/contactSlice';\n\nimport s from '../Filter/Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  return (\n    <label>\n      Find contact by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        autoComplete=\"off\"\n        value={filter}\n        // onChange={e => dispatch(changeFilter(e.currentTarget.value))}\n        onChange={e => dispatch(filterContact(e.currentTarget.value))}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchContacts, removeContact } from 'store/contactSlice';\nimport { getContacts, getFilter } from 'store/contactsSelectors';\n\nimport s from '../ContactList/ContactList.module.css';\nimport { TiUserDeleteOutline } from 'react-icons/ti';\n\nfunction ContactList() {\n  const { status, error } = useSelector(state => state.contacts);\n\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n\n  return (\n    <div>\n      {status === 'loading' && <h2>Loading</h2>}\n      {status === 'rejected' && <h2>Ups..{error}</h2>}\n\n      <ul className={s.list}>\n        {contacts.length > 0 &&\n          visibleContacts.map(contact => (\n            <li className={s.item} key={contact.id}>\n              <p>\n                <span>{contact.name}:</span> <span>{contact.phone}</span>\n              </p>\n\n              <button\n                className={s.buttonDelete}\n                type=\"button\"\n                onClick={() => dispatch(removeContact(contact.id))}\n              >\n                <TiUserDeleteOutline color=\"red\" size=\"18px\" />\n              </button>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ContactList;\n","import './App.css';\n\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n\n      <Container>\n        <ContactForm />\n      </Container>\n\n      <Container title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3se-a\",\"label\":\"ContactForm_label__ThJJi\",\"input\":\"ContactForm_input__uvSAz\",\"submitButton\":\"ContactForm_submitButton__3UZzJ\"};"],"sourceRoot":""}